<html>
<head>
  <title>Code Buddy</title>
  <link href="stylesheets/tutorial.css" media="screen" rel="stylesheet" type="text/css" />
  <link href="stylesheets/coderay.css" media="screen" rel="stylesheet" type="text/css" />
  <script src="javascripts/jquery.js" type="text/javascript"></script>
  <script src="javascripts/underscore.js" type="text/javascript"></script>
  <script src="javascripts/backbone.js" type="text/javascript"></script>
</head>
<body>
<h1><img src="images/buddy.jpeg"/>&nbsp;CodeBuddy</h1>
<body>
  <ul>
    <li id="address0"></li>
    <li id="address1"></li>
    <li id="address2"></li>
  </ul>
  <div id="code_content"></div>
  <ul>
    <li id="address3"></li>
    <li id="address4"></li>
    <li id="address5"></li>
    <li id="address6"></li>
    <li id="address7"></li>
    <li id="address8"></li>
    <li id="address9"></li>
  </ul>
<script>

  // ADDRESS MODEL
  var Address = Backbone.Model.extend();
  var addresses = new Backbone.Collection(<%= @addresses.to_json %>);

  // HARD CODED STACK MODEL

  var Stack = Backbone.Model.extend({
    initialize: function() {
      this.set({
        selected: <%= @stack.selected %>,
        addresses: addresses
      })
    },
    move_up: function() {
      var selected = this.get('selected');
      if (selected > 0) {
        this.set({selected: selected-1});
      }
    },
    move_down: function() {
      var selected = this.get('selected');
      if (selected < this.get('addresses').length-1) {
        this.set({selected: selected+1});
      }
    }
  });

  var stack = new Stack();

  // ADDRESS VIEW - SELECTED ADDRESS IN BOLD
  var AddressView = Backbone.View.extend({
    render: function() {
      html = this.model.get('file') + ':' + this.model.get('line');
      $(this.el).html(html);
    },
    render_selected: function() {
      html = '<b>' + this.model.get('file') + ':' + this.model.get('line') + '</b>';
      $(this.el).html(html);
    },
    events: {
      click: "open"
    },
    open: function() {
      stack.set({selected: this.model.get('id')-1});
    }
  })

  // STACK VIEW - LOGIC FOR ASSIGNING EACH ADDRESS VIEW TO EACH LI TAG
  var StackView = Backbone.View.extend({

    render: function() {
      var selected = this.selected();
      if (selected == 0) {
        $('#address0').html('&nbsp;');
        $('#address1').html('Top of the stack');
        this.view_count = 2;
      } else if (selected == 1) {
        $('#address0').html('Top of the stack');
        this.view_count = 1;
        this.render_address(0, false);
      } else {
        this.view_count = 0;
        this.render_address_range(_.range(selected-2, selected));
      }
      this.render_address(selected, true);
      this.render_address_range(_.range(selected+1, this.addresses().length));
      if (selected > 10+2) {
        var bottom_of_stack = 2 + this.addresses().length - selected;
        $('#address' + bottom_of_stack).html('Bottom of the stack');
        _.range(bottom_of_stack+1, 10).map(function(index) {
          $('#address' + index).html('');
        });
      }
    },

    selected: function() {
      return this.model.get('selected');
    },

    addresses: function() {
      return this.model.get('addresses');
    },

    view_count: 0,
    next_view_count: function() { return this.view_count++; },

    render_address: function(index, selected_flag) {
      var address = this.addresses().get(index+1);
      var address_view = new AddressView({el: $('#address' + this.next_view_count()), model: address});
      if (selected_flag) {
        address_view.render_selected();
      } else {
        address_view.render();
      }
    },

    render_address_range: function(range) {
      var that = this;
      range.map(function(index) {
        that.render_address(index, false);
      });
    }

  });

  // INSTANCE OF STACK VIEW - RENDERS ON PAGE LOAD
  var stackView = new StackView({model: stack});
  stackView.render();

  // RENDERS ON SELECTED INDEX CHANGED
  stack.bind('change:selected', function(model, selected) {
    stackView.render();
  });

  // UP/DOWN KEY BINDINGS
  $(document).keydown(function(event) {
    if (event.keyCode == 38) {
      stack.move_up();
      return false;
    } else if (event.keyCode == 40) {
      stack.move_down();
      return false;
    }
  })

</script>
</body>
</html>
